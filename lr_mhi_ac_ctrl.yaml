# Version 2.2
substitutions:
  # Unique device ID in HA
  deviceid: "mhi_ac_ctrl"
  # Unique device name in HA
  devicename: "MHI-AC-Ctrl"
  # The WiFi network to connect to
  wifi_ssid: !secret wifi_ssid
  # The WiFi password
  wifi_password: !secret wifi_password
  # Web auth username
  username: !secret username
  # Web auth password
  password: !secret password

esphome:
  name: ${deviceid}
  friendly_name: ${devicename}
  platform: ESP8266
  board: d1_mini
  platformio_options:
    # Run CPU at 160Mhz to fix mhi_ac_ctrl_core.loop error: -2
    board_build.f_cpu: 160000000L
  includes:
    - mhi_ac_ctrl.h
    - MHI-AC-Ctrl-core.h
    - MHI-AC-Ctrl-core.cpp

packages:
  # Comment if you encounter mhi_ac_ctrl_core.loop error: -2 errors and uncomment the legacy_framesize file
  mhi-ac-ctrl: !include conf/large_framesize.yaml
  # Uncomment this to allow for a working configuration on floor units or older units
  # mhi-ac-ctrl: !include conf/legacy_framesize.yaml

wifi:
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  ap:
    ssid: ${devicename}

captive_portal:

web_server:
  log: false
  port: 80
  auth:
    username: ${username}
    password: ${password}

logger:
  level: DEBUG
  baud_rate: 0

ota:

button:
  - platform: safe_mode
    name: Reboot to safe mode
  - platform: restart
    name: Restart
    entity_category: diagnostic

climate:
  - platform: custom
    lambda: |-
      auto mhi_ac_ctrl = new MhiAcCtrl();
      App.register_component(mhi_ac_ctrl);
      return {mhi_ac_ctrl};

    climates:
      - name: none  # HA will use the devicename -> climate.devicename
        id: ${deviceid}

api:
  reboot_timeout: 0s
  services:
    # Call the set_api_room_temperature service from HA to override the room temperature
    # If a new value has not been received after room_temp_api_timeout seconds, it will fall back to internal sensor
    - service: set_api_room_temperature
      variables:
        value: float
      then:
        - lambda: |-
            return ((MhiAcCtrl*)id(${deviceid}))->set_room_temperature(value);

    # Call the set_vanes service from HA to set the vane position
    # Needed because the ESPHome Climate class does not support this natively
    # Possible values: 1-4: static positions, 5: swing, 0: unknown
    - service: set_vanes
      variables:
        value: int
      then:
        - lambda: |-
            return ((MhiAcCtrl*)id(${deviceid}))->set_vanes(value);

sensor:
  - platform: uptime
    name: Uptime
  - platform: wifi_signal
    name: WiFi Signal
    update_interval: 60s

text_sensor:
  - platform: version
    name: ESPHome Version
  - platform: wifi_info
    ip_address:
      name: IP
    ssid:
      name: SSID
    bssid:
      name: BSSID

